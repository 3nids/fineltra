--set client_min_messages to ERROR;
CREATE TABLE triangles (src,tgt) AS VALUES
 ( 'SRID=1;POLYGON((0 0,1 1,2 0,0 0))'::geometry,
   'SRID=2;POLYGON((1 -1,2 1,3 -1,1 -1))'::geometry ) 
;
CREATE FUNCTION test (g geometry) RETURNS text
LANGUAGE 'plpgsql' STABLE STRICT
AS $$
DECLARE
  g2 GEOMETRY;
  g3 GEOMETRY;
BEGIN
  g2 := ST_GeomFromEWKB(
          ST_Fineltra(ST_AsEWKB(g), 'triangles', 'src', 'tgt')
        );
  g3 := ST_GeomFromEWKB(
          ST_Fineltra(ST_AsEWKB(g2), 'triangles', 'tgt', 'src')
        );
  RETURN ST_AsEWKT(g) || E'\n' ||
        ST_AsEWKT(g2) || E'\n' ||
        ST_AsEWKT(g3) || E'\n' ||
        -- we use AsEwkt to avoid drifts
        (ST_AsEWKT(g) = ST_AsEwkt(g3))::text;
END;
$$;
SELECT test( 'SRID=1;POINT(0 0)'::geometry ); -- point on vertex 1
        test        
--------------------
 SRID=1;POINT(0 0) +
 SRID=2;POINT(1 -1)+
 SRID=1;POINT(0 0) +
 true
(1 row)

SELECT test( 'SRID=1;POINT(1 1)'::geometry ); -- point on vertex 2
       test        
-------------------
 SRID=1;POINT(1 1)+
 SRID=2;POINT(2 1)+
 SRID=1;POINT(1 1)+
 true
(1 row)

SELECT test( 'SRID=1;POINT(2 0)'::geometry ); -- point on vertex 3
        test        
--------------------
 SRID=1;POINT(2 0) +
 SRID=2;POINT(3 -1)+
 SRID=1;POINT(2 0) +
 true
(1 row)

SELECT test( 'SRID=1;POINT(0.5 0.5)'::geometry ); -- point on edge 1-2
         test          
-----------------------
 SRID=1;POINT(0.5 0.5)+
 SRID=2;POINT(1.5 0)  +
 SRID=1;POINT(0.5 0.5)+
 true
(1 row)

SELECT test( 'SRID=1;POINT(1.5 0.5)'::geometry ); -- point on edge 2-3
         test          
-----------------------
 SRID=1;POINT(1.5 0.5)+
 SRID=2;POINT(2.5 0)  +
 SRID=1;POINT(1.5 0.5)+
 true
(1 row)

SELECT test( 'SRID=1;POINT(0.5 0.0)'::geometry ); -- point on edge 3-1
         test         
----------------------
 SRID=1;POINT(0.5 0) +
 SRID=2;POINT(1.5 -1)+
 SRID=1;POINT(0.5 0) +
 true
(1 row)

SELECT test( 'SRID=1;POINT(1.0 0.5)'::geometry ); -- point on center
        test         
---------------------
 SRID=1;POINT(1 0.5)+
 SRID=2;POINT(2 0)  +
 SRID=1;POINT(1 0.5)+
 true
(1 row)

SELECT test( 'SRID=1;LINESTRING(1 1,0 0,2 0)'::geometry ); -- line around boundary
               test               
----------------------------------
 SRID=1;LINESTRING(1 1,0 0,2 0)  +
 SRID=2;LINESTRING(2 1,1 -1,3 -1)+
 SRID=1;LINESTRING(1 1,0 0,2 0)  +
 true
(1 row)

-- circular string around boundary
SELECT test( 'SRID=1;CIRCULARSTRING(2 0, 1 1, 0 0)'::geometry );
                 test                 
--------------------------------------
 SRID=1;CIRCULARSTRING(2 0,1 1,0 0)  +
 SRID=2;CIRCULARSTRING(3 -1,2 1,1 -1)+
 SRID=1;CIRCULARSTRING(2 0,1 1,0 0)  +
 true
(1 row)

-- curve polygon around boundary
SELECT test( 'SRID=1;CURVEPOLYGON(COMPOUNDCURVE(
              CIRCULARSTRING(1 1,2 0,0 0),
              (0 0,1 1)))'::geometry );
                                     test                                     
------------------------------------------------------------------------------
 SRID=1;CURVEPOLYGON(COMPOUNDCURVE(CIRCULARSTRING(1 1,2 0,0 0),(0 0,1 1)))   +
 SRID=2;CURVEPOLYGON(COMPOUNDCURVE(CIRCULARSTRING(2 1,3 -1,1 -1),(1 -1,2 1)))+
 SRID=1;CURVEPOLYGON(COMPOUNDCURVE(CIRCULARSTRING(1 1,2 0,0 0),(0 0,1 1)))   +
 true
(1 row)

-- geometry collection
SELECT test( 'SRID=1;GEOMETRYCOLLECTION(
              LINESTRING(0.2 0, 0.6 0),
              POLYGON((0.3 0.2,1 0.8,1.8 0.2,0.3 0.2),
                      (0.6 0.4,1 0.6,1.6 0.2,0.6 0.4)),
              POINT(1 0))'::geometry ) ;
                                                                      test                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=1;GEOMETRYCOLLECTION(LINESTRING(0.2 0,0.6 0),POLYGON((0.3 0.2,1 0.8,1.8 0.2,0.3 0.2),(0.6 0.4,1 0.6,1.6 0.2,0.6 0.4)),POINT(1 0))         +
 SRID=2;GEOMETRYCOLLECTION(LINESTRING(1.2 -1,1.6 -1),POLYGON((1.3 -0.6,2 0.6,2.8 -0.6,1.3 -0.6),(1.6 -0.2,2 0.2,2.6 -0.6,1.6 -0.2)),POINT(2 -1))+
 SRID=1;GEOMETRYCOLLECTION(LINESTRING(0.2 0,0.6 0),POLYGON((0.3 0.2,1 0.8,1.8 0.2,0.3 0.2),(0.6 0.4,1 0.6,1.6 0.2,0.6 0.4)),POINT(1 0))         +
 true
(1 row)

-- triangle 
SELECT test( 'SRID=1;TRIANGLE((
              0.2 0.1,0.3 0.2,0.4 0.1,0.2 0.1
              ))'::geometry ) ;
                          test                          
--------------------------------------------------------
 SRID=1;TRIANGLE((0.2 0.1,0.3 0.2,0.4 0.1,0.2 0.1))    +
 SRID=2;TRIANGLE((1.2 -0.8,1.3 -0.6,1.4 -0.8,1.2 -0.8))+
 SRID=1;TRIANGLE((0.2 0.1,0.3 0.2,0.4 0.1,0.2 0.1))    +
 true
(1 row)

-- tin 
SELECT test( 'SRID=1;TIN(
              ((0.2 0.2,0.3 0.3,0.4 0.2,0.2 0.2)),
              ((0.4 0.2,0.2 0.2,0.3 0.1,0.4 0.2))
             )'::geometry ) ;
                                            test                                             
---------------------------------------------------------------------------------------------
 SRID=1;TIN(((0.2 0.2,0.3 0.3,0.4 0.2,0.2 0.2)),((0.4 0.2,0.2 0.2,0.3 0.1,0.4 0.2)))        +
 SRID=2;TIN(((1.2 -0.6,1.3 -0.4,1.4 -0.6,1.2 -0.6)),((1.4 -0.6,1.2 -0.6,1.3 -0.8,1.4 -0.6)))+
 SRID=1;TIN(((0.2 0.2,0.3 0.3,0.4 0.2,0.2 0.2)),((0.4 0.2,0.2 0.2,0.3 0.1,0.4 0.2)))        +
 true
(1 row)

-- 3DZ line
SELECT test( 'SRID=1;LINESTRING(0 0 2,0.5 0.5 4,2 0 6)'::geometry );
                   test                   
------------------------------------------
 SRID=1;LINESTRING(0 0 2,0.5 0.5 4,2 0 6)+
 SRID=2;LINESTRING(1 -1 2,1.5 0 4,3 -1 6)+
 SRID=1;LINESTRING(0 0 2,0.5 0.5 4,2 0 6)+
 true
(1 row)

-- 3DM line
SELECT test( 'SRID=1;LINESTRING(0 0 3,0.5 0.5 2,2 0 1)'::geometry );
                   test                   
------------------------------------------
 SRID=1;LINESTRING(0 0 3,0.5 0.5 2,2 0 1)+
 SRID=2;LINESTRING(1 -1 3,1.5 0 2,3 -1 1)+
 SRID=1;LINESTRING(0 0 3,0.5 0.5 2,2 0 1)+
 true
(1 row)

-- 4D line
SELECT test( 'SRID=1;LINESTRING(0 0 1 2,0.5 0.5 3 4,2 0 5 6)'::geometry );
                      test                      
------------------------------------------------
 SRID=1;LINESTRING(0 0 1 2,0.5 0.5 3 4,2 0 5 6)+
 SRID=2;LINESTRING(1 -1 1 2,1.5 0 3 4,3 -1 5 6)+
 SRID=1;LINESTRING(0 0 1 2,0.5 0.5 3 4,2 0 5 6)+
 true
(1 row)

DROP FUNCTION test (g geometry);
